set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"Latex live previews
Plugin 'xuhdev/vim-latex-live-preview'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///~/.vim/bundle/sparkup/ftdetect/hsb.vim'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'git://github.com/lfe-support/vim-lfe.git'

"Ultisnips
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'ptzz/lf.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" All of your Plugins must be added before the following line
call vundle#end()            " required
colorscheme desert
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
" changed
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
syntax on
set number
set relativenumber
set splitright
set splitbelow
set laststatus=2
autocmd FileType pandoc setlocal nospell

"Latex Live preview
let g:livepreview_previewer = "zathura"

"vim airline config
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline_left_sep = ''
let g:airline_theme = 'distinguished'
let g:airline_right_sep = ''
let g:airline_symbols.branch = 'âŽ‡'
let g:airline_symbols.whitespace = 'Îž'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.readonly = 'ðŸ”’'

set runtimepath^=~/.vim/bundle/ultisnips/autoload/UltiSnips.vim
" Ultisnips config
"
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackTrigger="<c-z>"
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
